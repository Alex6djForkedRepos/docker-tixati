name: Check and build new Tixati version

on:
  schedule:
    - cron: '35 * * * *'
  push:
    branches: actions-test

jobs:
  check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./scripts
    outputs:
      version: ${{ steps.version.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - id: version
        name: Get latest version
        run: echo "value=$(python main.py)" >> $GITHUB_OUTPUT
      - name: Backup Tixati installers to FTP
        if: ${{ steps.version.outputs.value }}
        run: python backuper.py ${{ steps.version.outputs.value }}
        env:
          FTP_HOST: ${{ secrets.FTP_HOST }}
          FTP_USER: ${{ secrets.FTP_USER }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
  build:
    needs: check
    if: ${{ needs.check.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{ needs.check.outputs.version }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./
          build-args: |
            TIXATI_VERSION=${{ needs.check.outputs.version }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/tixati:${{ needs.check.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/tixati:latest
